<?php
/**
 * @file
 * Code for the Rules Site Variable Condition module.
 */

/**
 * Implements hook_rules_condition_info().
 */
function rules_condition_site_variable_rules_condition_info() {
  return array(
    'rules_condition_site_variable_compare_variable' => array(
      'label' => t('Site variable to check'),
      'arguments' => array(
        'variable_name' => array('type' => 'text', 'label' => t('The site variable you want to check')),
        'variable_value' => array('type' => 'text', 'label' => t('The value that the site variable should have. Use "loosely comparison" option to compare non-string variables.')),
        'loosely_comparison' => array('type' => 'boolean', 'label' => t('Use loosely comparison (operator "==" instead of "===")')),
      ),
      'module' => 'rules_condition_site_variable',
      'group' => t('Data'),
    ),
  );
}

/**
 * Condition rules_condition_site_variable_compare_variable.
 *
 */
function rules_condition_site_variable_compare_variable(
  $variable_name, $variable_value, $loosely_comparison) {
  global $conf;

  // Returns FALSE if variable does not exist
  if (isset($conf[$variable_name])) {
    $variable = $conf[$variable_name];
  }
  else {
    return FALSE;
  }

  // Use 'loosely_comparison' option may be required to compare non-string variables.
  // (i.e. use $variable_value set to 0/1 to compare a boolean variable)
  if ($loosely_comparison) {
    return ($variable == $variable_value);
  }
  else {
    return ($variable === $variable_value);
  }
}
